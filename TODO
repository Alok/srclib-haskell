█ Remove the code for preprocess-haskell from this source tree.
	█ Read about the sanest way to depend against a local library.

█ Improve the test suite.
	█ Interactive testing with srcco.
		█ Get fast test iterations set up.
	█ I should start doing loose TDD style testing. It makes a ton of
	  sense with this type of program.
	█ Added a new test repo for cpp tests.
		█ Test cases where code #include's header files that
		  are bundled with the project.
		█ Test that all of the compiler macros are working correctly.
		█ Test that `MachDeps.h` and `ghcautoconf.h` can be included properly.
		█ Test cases where mingw32 and linux are both assumed to be the host OS.
			| #ifdef mingw32_HOST_OS
			| # if defined(i386_HOST_ARCH)
			| #  define WINDOWS_CCONV stdcall
			| # elif defined(x86_64_HOST_ARCH)
			| #  define WINDOWS_CCONV ccall
			| # else
			| #  error Unknown mingw32 arch
			| # endif
			| #endif

█ Strictly separate depresolve from graphing.
  █ Formaize the information that I need from the depresolve phase.
	█ Get depresolve to produce this infomrmaiton, FAST!
	█ Write the graphing code to accept depresolve information up front.
	█ In Main.hs, always run depresolve before graphing, and pass that
	  information to the grapher.

█ Allow available packages to be manually specified.
	█ First step: Always use the greatest available version.
	█ Final version: Actually resolve dependencies.

█ Cleanup
	█ Some code calls `cd`, which changes the working directory
	  of the entire program.
		█ Make this change local to that IO action.
	█ Parse failuers are logged with `traceM`.
		█ This is easy, but shouldn't be used in production.
		█ What's the best way to handle this? WriterT over IO?
	█ Stop hiding CPP warnings.
	█ This code currently exposes an interface based on lazy IO.
		█ Instead, expose a set of IO actions that give the library
		  consumer control over when things happen.

█ Make header files that are included with a package available to cpphs.
	█ Get information from *.cabal about where these header files are located.
	█ Copy these files to the temporary directory.
